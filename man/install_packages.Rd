% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install_packages}
\alias{install_packages}
\title{Install packages}
\usage{
install_packages(packages, sources = package_sources(), ..., error = TRUE,
  lock_wait = TRUE)
}
\arguments{
\item{packages}{A character vector of packages to install}

\item{sources}{Source information from
\code{\link{package_sources}}.}

\item{...}{Additional arguments passed through to
\code{\link{install.packages}}.}

\item{error}{Throw an error if package installation fails.}

\item{lock_wait}{Lock the directory while installing, or wait for
a second installation to complete.  In contrast with
\code{\link{install.packages}}, the lock is always library-wide.
Catastrophoic failure (e.g., out of memory error during package
installation) could leave a lockfile present.  In that case,
delete the file \code{.lock_context} from the first entry in
\code{.libPaths()}.}
}
\description{
Install packages, using source information from
\code{\link{package_sources}}.  In contrast with
\code{install.packages} this function can install packages in a
new local repository (used to isolate packages from the rest of
the system) and can install packages originally found on github
and bitbucket by creating a transient drat repository.  In
addition, \code{install_packages_missing} only installs
\emph{missing} packages only.  Also in contrast with
\code{install.packages}, these function will throw an error if
package installation fails (unless error=FALSE is set).
}
\section{Warning}{


Because of the possibility of confusion with
  \code{\link{install.packages}}, this function may be renamed
  shortly.
}

